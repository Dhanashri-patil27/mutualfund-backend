const ErrorCodes = Object.freeze({
    '100000': {
        responseCode: '100000',
        text: 'EMAIL_ALREADY_EXISTS',
        statusCode: 422,
        http_status_text: 'UNPROCESSABLE_ENTITY',
        message: 'Email already exists.',
        type: 'ClientError',
        module: 'Users',
    },
    '100001': {
        responseCode: '100001',
        text: 'USER_NOT_EXISTS',
        statusCode: 422,
        http_status_text: 'UNPROCESSABLE_ENTITY',
        message: 'User not exists.',
        type: 'ClientError',
        module: 'Users',
    },
    '100002': {
        responseCode: '100002',
        text: 'INVALID_PASSOWRD',
        statusCode: 422,
        http_status_text: 'UNPROCESSABLE_ENTITY',
        message: 'Invalid password.',
        type: 'ClientError',
        module: 'Users',
    },
    '100003': {
        responseCode: '100003',
        text: 'TOKEN_INVALID',
        statusCode: 401,
        http_status_text: 'UNAUTHORIZED',
        message: 'Invalid token provided.',
        type: 'ClientError',
        module: 'General',
    },
    '100004': {
        responseCode: '100004',
        text: 'ADMIN_ACCESS_REQUIRED',
        statusCode: 403,
        http_status_text: 'FORBIDDEN',
        message: 'Admin access required.',
        type: 'ClientError',
        module: 'General',
    },
    '100005': {
        responseCode: '100005',
        text: 'USER_NOT_Found',
        statusCode: 403,
        http_status_text: 'FORBIDDEN',
        message: 'User not found.',
        type: 'ClientError',
        module: 'General',
    },  
    '100006': {
        responseCode: '100006',
        text: 'INPUT_VALIDATION',
        statusCode: 400,
        http_status_text: 'BAD_REQUEST',
        message: 'Please check the input',
        type: 'ClientError',
        module: 'InputValidation',
    },
});

export default ErrorCodes;
